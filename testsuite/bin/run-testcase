#!/usr/bin/env python
"""Usage: run-test [options] test_dir

Run an AdaCore Style Checker (ASC) test located in test_dir.
"""

from gnatpython.ex import Run
from gnatpython.fileutils import find, cd, mv
from gnatpython.main import Main
from gnatpython.testdriver import TestRunner, add_run_test_options

import os
from os.path import abspath, dirname, isdir
import sys

class TestAdaCoreStyleChecker(TestRunner):

    def prepare_working_space(self):
        """Prepare the working space.
        """
        # First, perform the normal preparations (create the working
        # space, copy the testcase, etc).
        TestRunner.prepare_working_space(self)

    def apply_output_filter(self, str_list):
        """The test is succesful iff the output ends with `OK'.
        """
        if str_list and str_list[-1] == 'OK':
            return []
        return str_list

    def write_results(self):
        """Keep coverage data if needed.
        """
        TestRunner.write_results(self)
        if 'COVERAGE_DIR' in os.environ:
            for covf in find(self.work_dir, '.coverage*'):
                mv(covf, os.environ['COVERAGE_DIR'])


def main():
    """Run an ASC test.
    """
    m = Main()
    add_run_test_options(m)
    m.parse_args()
    if not m.args:
        sys.exit("Error: 1 argument expected. See -h")

    if m.options.restricted_discs is not None:
        m.options.restricted_discs = m.options.restricted_discs.split(',')

    t = TestAdaCoreStyleChecker(m.args[0],
                                m.options.discs,
                                m.options.output_dir,
                                m.options.tmp,
                                m.options.enable_cleanup,
                                m.options.restricted_discs,
                                len(m.args) > 1 and m.args[1:] or None,
                                m.options.failed_only)
    t.execute()


if __name__ == '__main__':
    main()
